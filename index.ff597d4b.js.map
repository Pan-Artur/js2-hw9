{"mappings":"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","sources":["<anon>","src/index.js"],"sourcesContent":["var $35da740d59af89ba$exports = {};\n// Task 1\nconst $35da740d59af89ba$var$todoList = ()=>{\n    const inputEl = document.querySelector(\".todo-input\");\n    const buttonEl = document.querySelector(\".todo-button\");\n    const errorEl = document.querySelector(\".todo-error\");\n    const listEl = document.querySelector(\".todo-list\");\n    const getTasksFromLocalStorage = ()=>JSON.parse(localStorage.getItem(\"tasks\")) || [];\n    const saveTasksToLocalStorage = (tasks)=>localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    buttonEl.addEventListener(\"click\", ()=>{\n        if (inputEl.value.length === 0) {\n            errorEl.classList.remove(\"hidden\");\n            setTimeout(()=>{\n                errorEl.classList.add(\"hidden\");\n            }, 2000);\n        } else {\n            const itemEl = document.createElement(\"li\");\n            itemEl.classList.add(\"todo-item\");\n            listEl.prepend(itemEl);\n            const itemTitleEl = document.createElement(\"p\");\n            itemTitleEl.textContent = inputEl.value;\n            itemEl.append(itemTitleEl);\n            const checkboxEl = document.createElement(\"input\");\n            checkboxEl.type = \"checkbox\";\n            checkboxEl.classList.add(\"todo-checkbox\");\n            itemEl.append(checkboxEl);\n            updateLocalStorage();\n            checkboxEl.addEventListener(\"change\", ()=>{\n                if (checkboxEl.checked) itemEl.classList.add(\"completed\");\n                else itemEl.classList.remove(\"completed\");\n                updateLocalStorage();\n            });\n            const deleteButtonEl = document.createElement(\"button\");\n            deleteButtonEl.textContent = \"remove\";\n            deleteButtonEl.classList.add(\"delete-button\");\n            itemEl.append(deleteButtonEl);\n            deleteButtonEl.addEventListener(\"click\", ()=>{\n                itemEl.remove();\n                updateLocalStorage();\n            });\n            inputEl.value = \"\";\n            updateLocalStorage();\n        }\n    });\n    const loadTasks = ()=>{\n        const tasks = getTasksFromLocalStorage();\n        tasks.forEach((task)=>{\n            const itemEl = document.createElement(\"li\");\n            itemEl.classList.add(\"todo-item\");\n            if (task.completed) itemEl.classList.add(\"completed\");\n            listEl.append(itemEl);\n            const itemTitleEl = document.createElement(\"p\");\n            itemTitleEl.textContent = task.text;\n            itemEl.append(itemTitleEl);\n            const checkboxEl = document.createElement(\"input\");\n            checkboxEl.type = \"checkbox\";\n            checkboxEl.classList.add(\"todo-checkbox\");\n            checkboxEl.checked = task.completed;\n            itemEl.append(checkboxEl);\n            checkboxEl.addEventListener(\"click\", ()=>{\n                if (checkboxEl.checked) itemEl.classList.add(\"completed\");\n                else itemEl.classList.remove(\"completed\");\n                updateLocalStorage();\n            });\n            const deleteButtonEl = document.createElement(\"button\");\n            deleteButtonEl.textContent = \"remove\";\n            deleteButtonEl.classList.add(\"delete-button\");\n            itemEl.append(deleteButtonEl);\n            deleteButtonEl.addEventListener(\"click\", ()=>{\n                itemEl.remove();\n                updateLocalStorage();\n            });\n        });\n    };\n    const updateLocalStorage = ()=>{\n        const tasks = Array.from(listEl.children).map((task)=>({\n                text: task.querySelector(\"p\").textContent,\n                completed: task.querySelector(\".todo-checkbox\").checked\n            }));\n        saveTasksToLocalStorage(tasks);\n    };\n    loadTasks();\n};\n$35da740d59af89ba$var$todoList();\n// Task 2\nconst $35da740d59af89ba$var$audit = ()=>{\n    const loginEl = document.querySelector(\".audit-login\");\n    const passwordEl = document.querySelector(\".audit-password\");\n    const enterButtonEl = document.querySelector(\"#enter\");\n    const registerButtonEl = document.querySelector(\"#register\");\n    const errorEl = document.querySelector(\".audit-error\");\n    const correctEl = document.querySelector(\".audit-correct\");\n    let savedUser = JSON.parse(localStorage.getItem(\"user\"));\n    if (savedUser) {\n        loginEl.value = savedUser.login;\n        passwordEl.value = savedUser.password;\n    }\n    enterButtonEl.addEventListener(\"click\", ()=>{\n        const enteredLogin = loginEl.value;\n        const enteredPassword = passwordEl.value;\n        if (savedUser && enteredLogin === savedUser.login && enteredPassword === savedUser.password) {\n            correctEl.classList.remove(\"hidden\");\n            errorEl.classList.add(\"hidden\");\n            setTimeout(()=>{\n                errorEl.classList.add(\"hidden\");\n                correctEl.classList.add(\"hidden\");\n            }, 2000);\n        } else {\n            errorEl.classList.remove(\"hidden\");\n            correctEl.classList.add(\"hidden\");\n            setTimeout(()=>{\n                correctEl.classList.add(\"hidden\");\n                errorEl.classList.add(\"hidden\");\n            }, 2000);\n        }\n    });\n    registerButtonEl.addEventListener(\"click\", ()=>{\n        const newLogin = loginEl.value;\n        const newPassword = passwordEl.value;\n        if (newLogin && newPassword) {\n            saveUserToLocalStorage(newLogin, newPassword);\n            savedUser = JSON.parse(localStorage.getItem(\"user\"));\n            correctEl.classList.remove(\"hidden\");\n            errorEl.classList.add(\"hidden\");\n            setTimeout(()=>{\n                errorEl.classList.add(\"hidden\");\n                correctEl.classList.add(\"hidden\");\n            }, 2000);\n        } else {\n            errorEl.classList.remove(\"hidden\");\n            correctEl.classList.add(\"hidden\");\n            setTimeout(()=>{\n                correctEl.classList.add(\"hidden\");\n                errorEl.classList.add(\"hidden\");\n            }, 2000);\n        }\n    });\n    const saveUserToLocalStorage = (login, password)=>{\n        const user = {\n            login: login,\n            password: password\n        };\n        localStorage.setItem(\"user\", JSON.stringify(user));\n    };\n};\n$35da740d59af89ba$var$audit();\n// Task 3\nconst $35da740d59af89ba$var$bookmarks = ()=>{\n    const formEl = document.querySelector(\".bookmarks-form\");\n    const listEl = document.querySelector(\".bookmarks-list\");\n    const nameInputEl = document.querySelector(\".bookmarks-name\");\n    const urlInputEl = document.querySelector(\".bookmarks-url\");\n    let bookmarks = JSON.parse(localStorage.getItem(\"bookmarks\")) || [];\n    const saveBookmarks = ()=>{\n        localStorage.setItem(\"bookmarks\", JSON.stringify(bookmarks));\n    };\n    const renderBookmarks = ()=>{\n        listEl.innerHTML = \"\";\n        bookmarks.forEach((bookmark, index)=>{\n            const item = document.createElement(\"li\");\n            listEl.prepend(item);\n            const link = document.createElement(\"a\");\n            link.href = bookmark.url;\n            link.textContent = bookmark.name;\n            link.contentEditable = true;\n            link.addEventListener(\"blur\", ()=>{\n                updateBookmarkName(index, link.textContent);\n            });\n            item.append(link);\n            const controls = document.createElement(\"div\");\n            controls.classList.add(\"bookmarks-controls\");\n            item.append(controls);\n            const deleteButton = document.createElement(\"button\");\n            deleteButton.textContent = \"Delete\";\n            deleteButton.classList.add(\"delete-button\");\n            deleteButton.addEventListener(\"click\", ()=>{\n                deleteBookmark(index);\n            });\n            controls.append(deleteButton);\n        });\n    };\n    const addBookmark = (e)=>{\n        e.preventDefault();\n        const name = nameInputEl.value;\n        const url = urlInputEl.value;\n        if (name && url) {\n            bookmarks.push({\n                name: name,\n                url: url\n            });\n            saveBookmarks();\n            renderBookmarks();\n            formEl.reset();\n        }\n    };\n    const updateBookmarkName = (index, newName)=>{\n        if (newName.trim()) {\n            bookmarks[index].name = newName.trim();\n            saveBookmarks();\n            renderBookmarks();\n        }\n    };\n    const deleteBookmark = (index)=>{\n        bookmarks.splice(index, 1);\n        saveBookmarks();\n        renderBookmarks();\n    };\n    formEl.addEventListener(\"submit\", addBookmark);\n    renderBookmarks();\n};\n$35da740d59af89ba$var$bookmarks();\n// Task 4\nconst $35da740d59af89ba$var$contacts = ()=>{\n    const formEl = document.querySelector(\".contact-form\");\n    const listEl = document.querySelector(\".contacts-list\");\n    const firstNameInputEl = document.querySelector(\".first-name\");\n    const lastNameInputEl = document.querySelector(\".last-name\");\n    const phoneInputEl = document.querySelector(\".phone\");\n    const emailInputEl = document.querySelector(\".email\");\n    const titleEl = document.querySelector(\".contacts-list-title\");\n    let contacts = JSON.parse(localStorage.getItem(\"contacts\")) || [];\n    const saveContacts = ()=>{\n        localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    };\n    const renderContacts = ()=>{\n        listEl.innerHTML = \"\";\n        contacts.forEach((contact, index)=>{\n            const item = document.createElement(\"li\");\n            item.classList.add(\"contact-item\");\n            const contactDetails = document.createElement(\"span\");\n            contactDetails.textContent = `${contact.firstName} ${contact.lastName} - ${contact.phone} - ${contact.email}`;\n            contactDetails.contentEditable = true;\n            contactDetails.addEventListener(\"blur\", ()=>{\n                updateContact(index, contactDetails.textContent);\n            });\n            item.append(contactDetails);\n            const controls = document.createElement(\"div\");\n            controls.classList.add(\"contact-controls\");\n            item.append(controls);\n            const deleteButton = document.createElement(\"button\");\n            deleteButton.textContent = \"Delete\";\n            deleteButton.addEventListener(\"click\", ()=>{\n                deleteContact(index);\n            });\n            controls.append(deleteButton);\n            listEl.append(item);\n        });\n    };\n    const addContact = (e)=>{\n        e.preventDefault();\n        const firstName = firstNameInputEl.value.trim();\n        const lastName = lastNameInputEl.value.trim();\n        const phone = phoneInputEl.value.trim();\n        const email = emailInputEl.value.trim();\n        if (firstName && lastName && phone && email) {\n            const newContact = {\n                firstName: firstName,\n                lastName: lastName,\n                phone: phone,\n                email: email\n            };\n            contacts.push(newContact);\n            saveContacts();\n            renderContacts();\n            formEl.reset();\n            titleEl.style.display = 'block';\n        }\n    };\n    const updateContact = (index, newDetails)=>{\n        const [firstName, lastName, phone, email] = newDetails.split(\" - \");\n        if (firstName && lastName && phone && email) {\n            contacts[index] = {\n                firstName: firstName,\n                lastName: lastName,\n                phone: phone,\n                email: email\n            };\n            saveContacts();\n            renderContacts();\n        }\n    };\n    const deleteContact = (index)=>{\n        contacts.splice(index, 1);\n        saveContacts();\n        renderContacts();\n    };\n    formEl.addEventListener(\"submit\", addContact);\n    renderContacts();\n};\n$35da740d59af89ba$var$contacts();\n\n\n//# sourceMappingURL=index.ff597d4b.js.map\n","// Task 1\n\nconst todoList = () => {\n  const inputEl = document.querySelector(\".todo-input\");\n  const buttonEl = document.querySelector(\".todo-button\");\n  const errorEl = document.querySelector(\".todo-error\");\n  const listEl = document.querySelector(\".todo-list\");\n\n  const getTasksFromLocalStorage = () =>\n    JSON.parse(localStorage.getItem(\"tasks\")) || [];\n\n  const saveTasksToLocalStorage = (tasks) =>\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n\n  buttonEl.addEventListener(\"click\", () => {\n    if (inputEl.value.length === 0) {\n      errorEl.classList.remove(\"hidden\");\n\n      setTimeout(() => {\n        errorEl.classList.add(\"hidden\");\n      }, 2000);\n    } else {\n      const itemEl = document.createElement(\"li\");\n      itemEl.classList.add(\"todo-item\");\n      listEl.prepend(itemEl);\n\n      const itemTitleEl = document.createElement(\"p\");\n      itemTitleEl.textContent = inputEl.value;\n      itemEl.append(itemTitleEl);\n\n      const checkboxEl = document.createElement(\"input\");\n      checkboxEl.type = \"checkbox\";\n      checkboxEl.classList.add(\"todo-checkbox\");\n      itemEl.append(checkboxEl);\n\n      updateLocalStorage();\n\n      checkboxEl.addEventListener(\"change\", () => {\n        if (checkboxEl.checked) {\n          itemEl.classList.add(\"completed\");\n        } else {\n          itemEl.classList.remove(\"completed\");\n        }\n\n        updateLocalStorage();\n      });\n\n      const deleteButtonEl = document.createElement(\"button\");\n      deleteButtonEl.textContent = \"remove\";\n      deleteButtonEl.classList.add(\"delete-button\");\n      itemEl.append(deleteButtonEl);\n\n      deleteButtonEl.addEventListener(\"click\", () => {\n        itemEl.remove();\n        updateLocalStorage();\n      });\n\n      inputEl.value = \"\";\n\n      updateLocalStorage();\n    }\n  });\n\n  const loadTasks = () => {\n    const tasks = getTasksFromLocalStorage();\n\n    tasks.forEach((task) => {\n      const itemEl = document.createElement(\"li\");\n      itemEl.classList.add(\"todo-item\");\n      if (task.completed) {\n        itemEl.classList.add(\"completed\");\n      }\n      listEl.append(itemEl);\n\n      const itemTitleEl = document.createElement(\"p\");\n      itemTitleEl.textContent = task.text;\n      itemEl.append(itemTitleEl);\n\n      const checkboxEl = document.createElement(\"input\");\n      checkboxEl.type = \"checkbox\";\n      checkboxEl.classList.add(\"todo-checkbox\");\n      checkboxEl.checked = task.completed;\n      itemEl.append(checkboxEl);\n\n      checkboxEl.addEventListener(\"click\", () => {\n        if (checkboxEl.checked) {\n          itemEl.classList.add(\"completed\");\n        } else {\n          itemEl.classList.remove(\"completed\");\n        }\n\n        updateLocalStorage();\n      });\n\n      const deleteButtonEl = document.createElement(\"button\");\n      deleteButtonEl.textContent = \"remove\";\n      deleteButtonEl.classList.add(\"delete-button\");\n      itemEl.append(deleteButtonEl);\n\n      deleteButtonEl.addEventListener(\"click\", () => {\n        itemEl.remove();\n        updateLocalStorage();\n      });\n    });\n  };\n\n  const updateLocalStorage = () => {\n    const tasks = Array.from(listEl.children).map((task) => ({\n      text: task.querySelector(\"p\").textContent,\n      completed: task.querySelector(\".todo-checkbox\").checked,\n    }));\n\n    saveTasksToLocalStorage(tasks);\n  };\n\n  loadTasks();\n};\n\ntodoList();\n\n// Task 2\n\nconst audit = () => {\n  const loginEl = document.querySelector(\".audit-login\");\n  const passwordEl = document.querySelector(\".audit-password\");\n  const enterButtonEl = document.querySelector(\"#enter\");\n  const registerButtonEl = document.querySelector(\"#register\");\n  const errorEl = document.querySelector(\".audit-error\");\n  const correctEl = document.querySelector(\".audit-correct\");\n\n  let savedUser = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (savedUser) {\n    loginEl.value = savedUser.login;\n    passwordEl.value = savedUser.password;\n  }\n\n  enterButtonEl.addEventListener(\"click\", () => {\n    const enteredLogin = loginEl.value;\n    const enteredPassword = passwordEl.value;\n\n    if (\n      savedUser &&\n      enteredLogin === savedUser.login &&\n      enteredPassword === savedUser.password\n    ) {\n      correctEl.classList.remove(\"hidden\");\n      errorEl.classList.add(\"hidden\");\n\n      setTimeout(() => {\n        errorEl.classList.add(\"hidden\");\n        correctEl.classList.add(\"hidden\");\n      }, 2000);\n    } else {\n      errorEl.classList.remove(\"hidden\");\n      correctEl.classList.add(\"hidden\");\n\n      setTimeout(() => {\n        correctEl.classList.add(\"hidden\");\n        errorEl.classList.add(\"hidden\");\n      }, 2000);\n    }\n  });\n\n  registerButtonEl.addEventListener(\"click\", () => {\n    const newLogin = loginEl.value;\n    const newPassword = passwordEl.value;\n\n    if (newLogin && newPassword) {\n      saveUserToLocalStorage(newLogin, newPassword);\n      savedUser = JSON.parse(localStorage.getItem(\"user\"));\n      correctEl.classList.remove(\"hidden\");\n      errorEl.classList.add(\"hidden\");\n\n      setTimeout(() => {\n        errorEl.classList.add(\"hidden\");\n        correctEl.classList.add(\"hidden\");\n      }, 2000);\n    } else {\n      errorEl.classList.remove(\"hidden\");\n      correctEl.classList.add(\"hidden\");\n\n      setTimeout(() => {\n        correctEl.classList.add(\"hidden\");\n        errorEl.classList.add(\"hidden\");\n      }, 2000);\n    }\n  });\n\n  const saveUserToLocalStorage = (login, password) => {\n    const user = {\n      login,\n      password,\n    };\n\n    localStorage.setItem(\"user\", JSON.stringify(user));\n  };\n};\n\naudit();\n\n// Task 3\n\nconst bookmarks = () => {\n  const formEl = document.querySelector(\".bookmarks-form\");\n  const listEl = document.querySelector(\".bookmarks-list\");\n  const nameInputEl = document.querySelector(\".bookmarks-name\");\n  const urlInputEl = document.querySelector(\".bookmarks-url\");\n\n  let bookmarks = JSON.parse(localStorage.getItem(\"bookmarks\")) || [];\n\n  const saveBookmarks = () => {\n    localStorage.setItem(\"bookmarks\", JSON.stringify(bookmarks));\n  };\n\n  const renderBookmarks = () => {\n    listEl.innerHTML = \"\"; \n\n    bookmarks.forEach((bookmark, index) => {\n      const item = document.createElement(\"li\");\n      listEl.prepend(item);\n\n      const link = document.createElement(\"a\");\n      link.href = bookmark.url;\n      link.textContent = bookmark.name;\n      link.contentEditable = true;\n      link.addEventListener(\"blur\", () => {\n        updateBookmarkName(index, link.textContent);\n      });\n      item.append(link);\n\n      const controls = document.createElement(\"div\");\n      controls.classList.add(\"bookmarks-controls\");\n      item.append(controls);\n\n      const deleteButton = document.createElement(\"button\");\n      deleteButton.textContent = \"Delete\";\n      deleteButton.classList.add(\"delete-button\");\n      deleteButton.addEventListener(\"click\", () => {\n        deleteBookmark(index);\n      });\n      controls.append(deleteButton);\n    });\n  };\n\n  const addBookmark = (e) => {\n    e.preventDefault(); \n\n    const name = nameInputEl.value;\n    const url = urlInputEl.value;\n\n    if (name && url) {\n      bookmarks.push({ name, url });\n      saveBookmarks();\n      renderBookmarks();\n      formEl.reset(); \n    }\n  };\n\n  const updateBookmarkName = (index, newName) => {\n    if (newName.trim()) {\n      bookmarks[index].name = newName.trim();\n      saveBookmarks();\n      renderBookmarks();\n    }\n  };\n\n  const deleteBookmark = (index) => {\n    bookmarks.splice(index, 1);\n    saveBookmarks();\n    renderBookmarks(); \n  };\n\n  formEl.addEventListener(\"submit\", addBookmark);\n\n  renderBookmarks(); \n};\n\nbookmarks();\n\n// Task 4\n\nconst contacts = () => {\n  const formEl = document.querySelector(\".contact-form\");\n  const listEl = document.querySelector(\".contacts-list\");\n  const firstNameInputEl = document.querySelector(\".first-name\");\n  const lastNameInputEl = document.querySelector(\".last-name\");\n  const phoneInputEl = document.querySelector(\".phone\");\n  const emailInputEl = document.querySelector(\".email\");\n  const titleEl = document.querySelector(\".contacts-list-title\");\n\n  let contacts = JSON.parse(localStorage.getItem(\"contacts\")) || [];\n\n  const saveContacts = () => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  };\n\n  const renderContacts = () => {\n    listEl.innerHTML = \"\"; \n\n    contacts.forEach((contact, index) => {\n      const item = document.createElement(\"li\");\n      item.classList.add(\"contact-item\");\n\n      const contactDetails = document.createElement(\"span\");\n      contactDetails.textContent = `${contact.firstName} ${contact.lastName} - ${contact.phone} - ${contact.email}`;\n      contactDetails.contentEditable = true;\n      contactDetails.addEventListener(\"blur\", () => {\n        updateContact(index, contactDetails.textContent);\n      });\n      item.append(contactDetails);\n\n      const controls = document.createElement(\"div\");\n      controls.classList.add(\"contact-controls\");\n      item.append(controls);\n\n      const deleteButton = document.createElement(\"button\");\n      deleteButton.textContent = \"Delete\";\n      deleteButton.addEventListener(\"click\", () => {\n        deleteContact(index);\n      });\n      controls.append(deleteButton);\n\n      listEl.append(item);\n    });\n  };\n\n  const addContact = (e) => {\n    e.preventDefault(); \n\n    const firstName = firstNameInputEl.value.trim();\n    const lastName = lastNameInputEl.value.trim();\n    const phone = phoneInputEl.value.trim();\n    const email = emailInputEl.value.trim();\n\n    if (firstName && lastName && phone && email) {\n      const newContact = { firstName, lastName, phone, email };\n      contacts.push(newContact);\n      saveContacts();\n      renderContacts();\n      formEl.reset(); \n\n      titleEl.style.display = 'block'; \n    }\n  };\n\n  const updateContact = (index, newDetails) => {\n    const [firstName, lastName, phone, email] = newDetails.split(\" - \");\n    if (firstName && lastName && phone && email) {\n      contacts[index] = { firstName, lastName, phone, email };\n      saveContacts();\n      renderContacts();\n    }\n  };\n\n  const deleteContact = (index) => {\n    contacts.splice(index, 1);\n    saveContacts();\n    renderContacts();\n  };\n\n  formEl.addEventListener(\"submit\", addContact);\n\n  renderContacts();\n};\n\ncontacts();\n"],"names":["inputEl","document","querySelector","buttonEl","errorEl","listEl","saveTasksToLocalStorage","tasks","localStorage","setItem","JSON","stringify","addEventListener","value","length","classList","remove","setTimeout","add","itemEl","createElement","prepend","itemTitleEl","textContent","append","checkboxEl","type","updateLocalStorage","checked","deleteButtonEl","Array","from","children","map","task","text","completed","parse","getItem","forEach","$35da740d59af89ba$var$audit","loginEl","passwordEl","enterButtonEl","registerButtonEl","correctEl","savedUser","login","password","enteredLogin","enteredPassword","newLogin","newPassword","saveUserToLocalStorage","$35da740d59af89ba$var$bookmarks","formEl","nameInputEl","urlInputEl","bookmarks","saveBookmarks","renderBookmarks","innerHTML","bookmark","index","item","link","href","url","name","contentEditable","updateBookmarkName","controls","deleteButton","deleteBookmark","newName","trim","splice","e","preventDefault","push","reset","$35da740d59af89ba$var$contacts","firstNameInputEl","lastNameInputEl","phoneInputEl","emailInputEl","titleEl","contacts","saveContacts","renderContacts","contact","contactDetails","firstName","lastName","phone","email","updateContact","deleteContact","newDetails","split","style","display"],"version":3,"file":"index.ff597d4b.js.map"}